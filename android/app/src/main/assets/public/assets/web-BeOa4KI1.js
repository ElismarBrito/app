import{W as l}from"./index-DK0BJWQX.js";class a extends l{async requestAllPermissions(){return console.log("Web: requestAllPermissions - web implementation"),{granted:!0}}async getSimCards(){return console.log("Web: getSimCards - returning mock data"),{simCards:[{id:"web-sim-1",slotIndex:0,displayName:"SIM Principal",carrierName:"Operadora Web",phoneNumber:"",iccId:"",isEmbedded:!1,type:"physical"}]}}async requestRoleDialer(){return console.log("Web: requestRoleDialer - not available on web"),{granted:!1}}async hasRoleDialer(){return{hasRole:!1}}async startCall(e){return console.log("Web: startCall",e.number),window.open(`tel:${e.number}`,"_blank"),{callId:`web-${Date.now()}`}}async endCall(e){console.log("Web: endCall",e.callId)}async mergeActiveCalls(){return console.log("Web: mergeActiveCalls - not available on web"),{conferenceId:`web-conf-${Date.now()}`}}async getActiveCalls(){return{calls:[]}}async registerPhoneAccount(e){console.log("Web: registerPhoneAccount",e.accountLabel)}async startAutomatedCalling(e){return console.log("Web: startAutomatedCalling",e),{sessionId:`web-session-${Date.now()}`}}async stopAutomatedCalling(e){console.log("Web: stopAutomatedCalling",e.sessionId)}async addListener(e,s){return console.log(`Web: addListener for ${e}`),{remove:async()=>{console.log(`Web: removing listener for ${e}`)}}}async removeAllListeners(){console.log("Web: removeAllListeners")}}export{a as PbxMobileWeb};
